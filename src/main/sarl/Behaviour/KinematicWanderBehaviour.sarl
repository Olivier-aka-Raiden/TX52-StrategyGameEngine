package Behaviour

import java.util.Random
import org.arakhne.afc.math.continous.object2d.Point2f
import org.arakhne.afc.math.continous.object2d.Vector2f

/**
 * @author Dudul
 *
 */
class KinematicWanderBehaviour implements WanderBehaviour{	
	
	val generator = new Random
	
	def random : double {
		return Math::random - Math::random
		//
		//
	}
	
	override runWander(position : Point2f, orientation : Vector2f, linearSpeed : float, maxLinear : float, angularSpeed : float, maxAngular : float) : BehaviourOutput {

		val l = orientation.clone
		if(l.equals(new Vector2f(0,0))){
			l.add(new Vector2f(1,1))
		}else{
			l.normalize()	
		}
		
		l.scale(maxLinear)
		val a = random * maxAngular
	
		return new BehaviourOutput() => [
			linear = l
			angular = a as float
		]
	
	}
	
}