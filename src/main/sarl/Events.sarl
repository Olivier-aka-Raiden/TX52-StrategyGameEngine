import java.util.List
import java.util.UUID
import org.arakhne.afc.math.continous.object2d.Point2f
import org.arakhne.afc.math.continous.object2d.Vector2f
import tx52.environment.EnvironmentObject

/**
 * @author Olivier
 *
 */
event Perception {
	val time : float
	val objects : List<EnvironmentObject>
	val pos : Point2f
	val bodyId : UUID
	new (time : float, bodyID : UUID, objects : List<EnvironmentObject>, pos : Point2f){
		this.time = time
		this.bodyId = bodyID
		this.objects = objects
		this.pos = pos
	}
	
}

//Action of an agent -> not needed

/**
 * Agent emit an influence
 */
event Influence {
	val time : float
	val vector : Vector2f
	new (time : float, vector : Vector2f){
		this.time = time
		this.vector = vector
	}
}

event RunEndOfStep

event RunBeginingOfStep

event EndOfGame