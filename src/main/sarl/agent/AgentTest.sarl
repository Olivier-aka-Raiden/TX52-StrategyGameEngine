/**
 * 
 */
package ^agent

import io.sarl.core.Lifecycle
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Logging
import Behaviour.SeekBehaviour
import Behaviour.WanderBehaviour
import Behaviour.KinematicSeekBehaviour
import Behaviour.KinematicWanderBehaviour

/**
 * @author Dudul
 *
 */
agent AgentTest extends AbstractAnimat {
	
	uses  Lifecycle, DefaultContextInteractions,Logging
	
	var seekBehaviour : SeekBehaviour
	var wanderBehaviour : WanderBehaviour 
	 
	on Initialize{
		super._handle_Initialize_0(occurrence) 
		print("Agent Spawn\n")
		emit(new agentReady)
		
	}
	
	on Perception{
		var body = occurrence.body
		
		if(occurrence.objects.size()>0){
			var target = occurrence.objects.get(0)
			this.seekBehaviour = new KinematicSeekBehaviour
			
			var o = this.seekBehaviour.runSeek(
			body.position,
			body.currentLinearMotion.length,
			body.maxLinearSpeed,
			target.position
			)o.emitInfluence
			
		}else{
			this.wanderBehaviour = new KinematicWanderBehaviour
			//position : Point2f, orientation : Vector2f, linearSpeed : float, maxLinear : float, angularSpeed : float, maxAngular : float
			var o = this.wanderBehaviour.runWander(
			body.position,
			body.currentLinearMotion,
			body.currentLinearMotion.length,
			body.maxLinearSpeed,
			body.currentAngularSpeed,
			body.maxAngularSpeed
			)o.emitInfluence
			
		}
		
		
	}
}