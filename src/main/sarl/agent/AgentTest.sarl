/**
 * 
 */
package ^agent

import Behaviour.KinematicWanderBehaviour
import Behaviour.SeekBehaviour
import Behaviour.WanderBehaviour
import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import Behaviour.KinematicSeekBehaviour

/**
 * @author Dudul
 *
 */
agent AgentTest extends AbstractAnimat {

	uses  Lifecycle, DefaultContextInteractions
	
	var seekBehaviour : SeekBehaviour
	var wanderBehaviour : WanderBehaviour  
	  
	on Initialize{
		super._handle_Initialize_0(occurrence) 
		//print("Agent Spawn\n")
		emit(new agentReady)
		
	}
	
	on Perception{
		var body = occurrence.body
		
		doNothing
//		if(occurrence.objects.size()>0){
//			var target = occurrence.objects.get(0)
//			this.seekBehaviour = new KinematicSeekBehaviour
//			
//			var o = this.seekBehaviour.runSeek(
//			body.position,
//			body.currentLinearMotion.length,
//			body.maxLinearSpeed,
//			target.position
//			)
//			o.emitInfluence(occurrence.time)
//			
//		}else{
//			this.wanderBehaviour = new KinematicWanderBehaviour
//			var o = this.wanderBehaviour.runWander(
//			body.position,
//			body.currentLinearMotion,
//			body.currentLinearMotion.length,
//			body.maxLinearSpeed,
//			body.currentAngularSpeed,
//			body.maxAngularSpeed
//			)
//			o.emitInfluence(occurrence.time)
//			
//		}
		
		
	}
}