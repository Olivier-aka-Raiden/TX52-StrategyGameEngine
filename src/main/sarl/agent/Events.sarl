package ^agent

import java.util.ArrayList
import java.util.UUID
import org.arakhne.afc.math.continous.object2d.Point2f
import org.arakhne.afc.math.continous.object2d.Vector2f
import tx52.environment.AgentBody
import tx52.environment.Perceivable

/**
 * @author Olivier
 *
 */
event Perception {
	val time : float
	val objects : ArrayList<Perceivable>
	val pos : Point2f
	val bodyId : UUID
	val body : AgentBody
	
	new (time : float, bodyID : UUID, objects : ArrayList<Perceivable>, pos : Point2f,body : AgentBody){
		this.time = time
		this.bodyId = bodyID
		this.objects = objects
		this.pos = pos
		this.body = body
	}
}

/**
 * Agent emit an influence (2 kinds of influence)
 */
event Influence {
	val time : float
	val vector : Vector2f
	
	new (time : float, vector : Vector2f){
		this.time = time
		this.vector = vector
	} 
}

event MotionInfluence extends Influence{ 
	val angular : float
	
	new (time : float, vector : Vector2f,angular : float){
		super(time,vector)
		this.angular = angular
	}
}

event ShootInfluence extends Influence{
	
	new (time : float, vector : Vector2f){
		super(time,vector)
	}
}

event agentReady

event RunEndOfStep

event RunBeginingOfStep

event EndOfGame